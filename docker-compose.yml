version: '3.8'

# Simple production setup for client home server
services:
  # Main LIMS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: labscientific-lims-app
    ports:
      - "3000:3000"
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DB_PATH=/app/data/ashley_lims.db
      - LOG_LEVEL=info
    volumes:
      - lims_data:/app/data
      - lims_logs:/app/backend/logs
      - lims_temp:/app/temp
    depends_on:
      - redis
    networks:
      - lims_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: labscientific-lims-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - lims_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: labscientific-lims-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.client.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    networks:
      - lims_network
    restart: unless-stopped

networks:
  lims_network:
    driver: bridge

volumes:
  lims_data:
    driver: local
  lims_logs:
    driver: local
  lims_temp:
    driver: local
  redis_data:
    driver: local