# Advanced Service Configurations for LIMS
# This file demonstrates production-ready service configurations with advanced features

apiVersion: v1
kind: Service
metadata:
  name: lims-app-service-advanced
  namespace: labscientific-lims
  labels:
    app: labscientific-lims
    component: app
    tier: frontend
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-timeout: "60"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "10"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "5"
    prometheus.io/scrape: "true"
    prometheus.io/port: "3001"
    prometheus.io/path: "/monitoring/metrics"
spec:
  type: LoadBalancer
  loadBalancerSourceRanges:
  - 10.0.0.0/8
  - 172.16.0.0/12
  - 192.168.0.0/16
  selector:
    app: labscientific-lims
    component: app
  ports:
  - name: http
    port: 80
    targetPort: 3000
    protocol: TCP
  - name: https
    port: 443
    targetPort: 3000
    protocol: TCP
  - name: api
    port: 3001
    targetPort: 3001
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  externalTrafficPolicy: Local
  healthCheckNodePort: 32000

---
apiVersion: v1
kind: Service
metadata:
  name: lims-app-headless
  namespace: labscientific-lims
  labels:
    app: labscientific-lims
    component: app
    tier: frontend
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    prometheus.io/scrape: "true"
    prometheus.io/port: "3001"
    prometheus.io/path: "/monitoring/metrics"
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  selector:
    app: labscientific-lims
    component: app
  ports:
  - name: frontend
    port: 3000
    targetPort: 3000
    protocol: TCP
  - name: backend
    port: 3001
    targetPort: 3001
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: lims-worker-service
  namespace: labscientific-lims
  labels:
    app: labscientific-lims
    component: worker
    tier: backend
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app: labscientific-lims
    component: worker
  ports:
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  - name: health
    port: 8080
    targetPort: 8080
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-service-advanced
  namespace: labscientific-lims
  labels:
    app: labscientific-lims
    component: postgresql
    tier: database
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9187"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app: labscientific-lims
    component: postgresql
  ports:
  - name: postgresql
    port: 5432
    targetPort: 5432
    protocol: TCP
  - name: metrics
    port: 9187
    targetPort: 9187
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service-advanced
  namespace: labscientific-lims
  labels:
    app: labscientific-lims
    component: redis
    tier: cache
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app: labscientific-lims
    component: redis
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP
  - name: metrics
    port: 9121
    targetPort: 9121
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: lims-monitoring-service
  namespace: labscientific-lims
  labels:
    app: labscientific-lims
    component: monitoring
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3001"
    prometheus.io/path: "/monitoring/metrics"
spec:
  type: ClusterIP
  selector:
    app: labscientific-lims
    component: app
  ports:
  - name: metrics
    port: 3001
    targetPort: 3001
    protocol: TCP

---
# External Service for external database (if needed)
apiVersion: v1
kind: Service
metadata:
  name: external-postgresql
  namespace: labscientific-lims
  labels:
    app: labscientific-lims
    component: external-database
spec:
  type: ExternalName
  externalName: rds.us-east-1.amazonaws.com
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP

---
# External Service for external cache (if needed)
apiVersion: v1
kind: Service
metadata:
  name: external-redis
  namespace: labscientific-lims
  labels:
    app: labscientific-lims
    component: external-cache
spec:
  type: ExternalName
  externalName: elasticache.us-east-1.amazonaws.com
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP

---
# Service for exposing metrics to Prometheus
apiVersion: v1
kind: Service
metadata:
  name: lims-metrics-aggregator
  namespace: labscientific-lims
  labels:
    app: labscientific-lims
    component: metrics
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app: labscientific-lims
  ports:
  - name: app-metrics
    port: 3001
    targetPort: 3001
    protocol: TCP
  - name: worker-metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  - name: postgres-metrics
    port: 9187
    targetPort: 9187
    protocol: TCP
  - name: redis-metrics
    port: 9121
    targetPort: 9121
    protocol: TCP

---
# Service for health checks
apiVersion: v1
kind: Service
metadata:
  name: lims-health-service
  namespace: labscientific-lims
  labels:
    app: labscientific-lims
    component: health
spec:
  type: ClusterIP
  selector:
    app: labscientific-lims
    component: app
  ports:
  - name: health
    port: 3001
    targetPort: 3001
    protocol: TCP

---
# Service for admin operations
apiVersion: v1
kind: Service
metadata:
  name: lims-admin-service
  namespace: labscientific-lims
  labels:
    app: labscientific-lims
    component: admin
  annotations:
    service.beta.kubernetes.io/load-balancer-source-ranges: "10.0.0.0/8,172.16.0.0/12"
spec:
  type: LoadBalancer
  selector:
    app: labscientific-lims
    component: app
  ports:
  - name: admin
    port: 8080
    targetPort: 8080
    protocol: TCP
  loadBalancerSourceRanges:
  - 10.0.0.0/8
  - 172.16.0.0/12

---
# Service for WebSocket connections
apiVersion: v1
kind: Service
metadata:
  name: lims-websocket-service
  namespace: labscientific-lims
  labels:
    app: labscientific-lims
    component: websocket
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "3600"
spec:
  type: LoadBalancer
  selector:
    app: labscientific-lims
    component: app
  ports:
  - name: websocket
    port: 8080
    targetPort: 8080
    protocol: TCP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 3600

---
# Service for file uploads
apiVersion: v1
kind: Service
metadata:
  name: lims-upload-service
  namespace: labscientific-lims
  labels:
    app: labscientific-lims
    component: upload
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
spec:
  type: ClusterIP
  selector:
    app: labscientific-lims
    component: app
  ports:
  - name: upload
    port: 3002
    targetPort: 3002
    protocol: TCP

---
# Service for batch processing
apiVersion: v1
kind: Service
metadata:
  name: lims-batch-service
  namespace: labscientific-lims
  labels:
    app: labscientific-lims
    component: batch
spec:
  type: ClusterIP
  selector:
    app: labscientific-lims
    component: worker
  ports:
  - name: batch
    port: 9091
    targetPort: 9091
    protocol: TCP