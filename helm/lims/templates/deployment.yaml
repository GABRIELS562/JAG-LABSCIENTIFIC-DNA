apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lims.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "lims.labels" . | nindent 4 }}
spec:
  {{- if not .Values.hpa.enabled }}
  replicas: {{ .Values.app.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "lims.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "3001"
        prometheus.io/path: "/metrics"
      labels:
        {{- include "lims.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "lims.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.app.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.app.securityContext | nindent 12 }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          ports:
            - name: frontend
              containerPort: {{ .Values.app.containers.frontend.port }}
              protocol: TCP
            - name: backend
              containerPort: {{ .Values.app.containers.backend.port }}
              protocol: TCP
          env:
            - name: NODE_ENV
              value: {{ .Values.app.env.NODE_ENV }}
            - name: LOG_LEVEL
              value: {{ .Values.app.env.LOG_LEVEL }}
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "lims.fullname" . }}-config
                  key: DATABASE_URL
            - name: REDIS_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "lims.fullname" . }}-config
                  key: REDIS_URL
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "lims.fullname" . }}-secret
                  key: jwt-secret
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "lims.fullname" . }}-secret
                  key: database-password
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "lims.fullname" . }}-secret
                  key: redis-password
          {{- if .Values.app.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.app.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.app.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.app.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.app.startupProbe }}
          startupProbe:
            {{- toYaml .Values.app.startupProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.app.containers.backend.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /app/data
            - name: logs
              mountPath: /app/logs
            - name: temp
              mountPath: /app/temp
            {{- if .Values.configMap.enabled }}
            - name: config
              mountPath: /app/config
              readOnly: true
            {{- end }}
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "lims.fullname" . }}-data
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: logs
          emptyDir: {}
        - name: temp
          emptyDir: {}
        {{- if .Values.configMap.enabled }}
        - name: config
          configMap:
            name: {{ include "lims.fullname" . }}-config
        {{- end }}
      {{- with .Values.app.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.app.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.app.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30